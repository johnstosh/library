plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.+'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.muczynski'
version = '0.0.2'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2' // for jules
    implementation 'com.google.cloud.sql:postgres-socket-factory:1.13.+'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2' // for JUnit testing
    testImplementation 'com.microsoft.playwright:playwright:1.55.0'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

}

jar {
    enabled = false
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    testLogging {
        // Only show detailed output for failed tests
        events 'failed'
        exceptionFormat 'full'
        showCauses true
        showStackTraces true
        // Optionally include standard streams (e.g., System.out) for failed tests
        showStandardStreams false
    }
}
